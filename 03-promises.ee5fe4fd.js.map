{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBA6BtC,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAAOC,KAEzBC,YAAW,KACUC,KAAKC,SAAW,GAGtCJ,EAAM,C,SAAEH,EAAUQ,MAAAP,IAErBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,GAAQ,GACxBA,EAAM,G,CAnCTR,EAAOgB,iBAAiB,UAExB,SAAoBC,GAClBA,EAAIC,iBAEJ,MAAMC,EAAaC,OAAOjB,EAAMkB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OAE9B,IAAK,IAAIE,EAAI,EAAGA,EAAIlB,EAAOgB,MAAOE,GAAK,EAAG,CAKxCjB,EAHciB,EAAI,EACAJ,EAAaG,EAAYC,GAEXC,MAAK,EAACjB,SAAEA,EAAUQ,MAAAU,MAClDC,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBrB,QAAiBkB,MAAU,IAEzEI,OAAM,EAACtB,SAAEA,EAAUQ,MAAAe,MAClBJ,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAoBxB,QAAiBuB,MAAU,G,CAIzEb,EAAIe,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst create = document.querySelector('.form')\nconst delay = document.querySelector('input[name=\"delay\"]')\nconst step = document.querySelector('input[name=\"step\"]')\nconst amount = document.querySelector('input[name=\"amount\"]')\n\n \n  \n\ncreate.addEventListener('submit', submitForm)\n\nfunction submitForm(evt) {\n  evt.preventDefault()\n\n  const delayValue = Number(delay.value)\n  const stepValue = Number(step.value)\n\n  for (let i = 0; i < amount.value; i += 1) {\n\n    const index = i + 1\n    const firstStep = delayValue + stepValue * i\n\n    createPromise(index, firstStep).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });;\n  }\n\n  evt.target.reset()\n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resol, reject) => {\n    \n    setTimeout(() => {\n   const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n   resol({ position, delay });\n  } else {\nreject({ position, delay });  }  \n}, delay)\n  })\n  \n}\n\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$create","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resol","reject","setTimeout","Math","random","delay","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","i","then","delay1","$parcel$interopDefault","Notify","success","catch","delay2","failure","target","reset"],"version":3,"file":"03-promises.ee5fe4fd.js.map"}