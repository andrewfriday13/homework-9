{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAChCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBA6BtC,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAAOC,GAEzBC,YAAW,WACUC,KAAKC,SAAW,GAGtCJ,EAAM,CAAEH,WAAUQ,MAAAP,IAErBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAChBA,E,IAnCHR,EAAOgB,iBAAiB,UAExB,SAAoBC,GAClBA,EAAIC,iBAKJ,IAHA,IAAMC,EAAaC,OAAOjB,EAAMkB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OAErBE,EAAI,EAAGA,EAAIlB,EAAOgB,MAAOE,GAAK,EAAG,CAKxCjB,EAHciB,EAAI,EACAJ,EAAaG,EAAYC,GAEXC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALV,MAClDY,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAGlB,EAAQkB,EAARlB,SAAUyB,EAAKP,EAALV,MAClBY,EAAA7B,GAAS8B,OAAOK,QAAQ,sBAAuCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M,IAIvEf,EAAIiB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst create = document.querySelector('.form')\nconst delay = document.querySelector('input[name=\"delay\"]')\nconst step = document.querySelector('input[name=\"step\"]')\nconst amount = document.querySelector('input[name=\"amount\"]')\n\n \n  \n\ncreate.addEventListener('submit', submitForm)\n\nfunction submitForm(evt) {\n  evt.preventDefault()\n\n  const delayValue = Number(delay.value)\n  const stepValue = Number(step.value)\n\n  for (let i = 0; i < amount.value; i += 1) {\n\n    const index = i + 1\n    const firstStep = delayValue + stepValue * i\n\n    createPromise(index, firstStep).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });;\n  }\n\n  evt.target.reset()\n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resol, reject) => {\n    \n    setTimeout(() => {\n   const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n   resol({ position, delay });\n  } else {\nreject({ position, delay });  }  \n}, delay)\n  })\n  \n}\n\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$create","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resol","reject","setTimeout","Math","random","delay","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","i","then","param","delay1","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure","target","reset"],"version":3,"file":"03-promises.75bd2ed4.js.map"}